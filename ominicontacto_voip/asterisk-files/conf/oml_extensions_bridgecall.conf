; Copyright (C) 2018 Freetech Solutions

; This file is part of OMniLeads

; This program is free software: you can redistribute it and/or modify
; it under the terms of the GNU General Public License as published by
; the Free Software Foundation, either version 3 of the License, or
; (at your option) any later version.

; This program is distributed in the hope that it will be useful,
; but WITHOUT ANY WARRANTY; without even the implied warranty of
; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
; GNU General Public License for more details.

; You should have received a copy of the GNU General Public License
; along with this program.  If not, see http://www.gnu.org/licenses/.

; OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML    BRIDGE CALL ACTIONS      OML OML OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML    BRIDGE CALL ACTIONS      OML OML OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML    BRIDGE CALL ACTIONS      OML OML OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML

[sub-oml-queue-inbound-connect-agent]
; Subrutina que se dispara cada vez que un agente atiende una llamada de cola Inbound
; Es invocada por los canales SIP/XXXX (de agentes), cuando Ã©stos atienden una llamada Inbound

include => sub-oml-queue-inbound-connect-agent-custom

exten => s,1,Verbose(2, The inbound call was attended !!! the new channel: SIP/AGENTXXXX is ready for varsset and bridge actions)
same => n,Set(CHANNEL(hangup_handler_push)=rip-in-agent-chan,s,1)

same => n,Set(__OMLAGENTID=${CUT(MEMBERNAME,_,1)})
same => n,Set(__OMLAGENTSIP=${MEMBERINTERFACE:6})
same => n,Set(__OMLAGENTNAME=${MEMBERNAME})

same => n,Set(__OMLCALLSTATUS=CONNECT)

same => n,Set(__OMLCALLWAITDURATION=$[${EPOCH} - ${OMLYEARZERO}])
same => n,Set(__OMLANSWERTIMESTAMP=${EPOCH})

same => n,Set(SHARED(OMLCALLSTATUS,${OMLMOTHERCHAN})=CONNECT)
same => n,Set(SHARED(OMLCALLWAITDURATION,${OMLMOTHERCHAN})=${OMLCALLWAITDURATION})
same => n,Set(SHARED(OMLANSWERTIMESTAMP,${OMLMOTHERCHAN})=${OMLANSWERTIMESTAMP})
same => n,Set(SHARED(OMLAGENTID,${OMLMOTHERCHAN})=${OMLAGENTID})
same => n,Set(SHARED(OMLAGENTNAME,${OMLMOTHERCHAN})=${OMLAGENTNAME})
same => n,Set(SHARED(OMLFAILOVER,${OMLMOTHERCHAN})=trueandconnect)

same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLAGENTID},${OMLCALLSTATUS},${OMLOUTNUM},${OMLCODCLI},${OMLCALLTYPEID},${OMLCAMPTYPE},${OMLCALLWAITDURATION},,,call))
same => n,AGI(omni-agent-status.py,SET,${OMLAGENTID},ONCALL,${EPOCH},${OMLCAMPQNAME},${OMLOUTNUM})
same => n,Return()


[sub-oml-queue-dialer-connect-agent]
; Subrutina que se dispara cada vez que un agente atiende una llamada de cola Dialer
; Es invocada por los canales SIP/XXXX (de agentes), cuando Ã©stos atienden una llamada Dialer

include => sub-oml-queue-dialer-connect-agent-custom

exten => s,1,Verbose(2, The dialer call was attended !!! the new channel: SIP/AGENTXXXX is ready for varsset and bridge actions)
same => n,Set(CHANNEL(hangup_handler_push)=rip-dialer-agent-chan,s,1)

;same => n,Set(__OMLCAMPTYPE=${OMLCAMPTYPE})
;same => n,Set(__OMLCAMPQNAME=${OMLCAMPQNAME})
same => n,Set(__OMLCALLTYPEID=2)
same => n,Set(__OMLAGENTSIP=${MEMBERINTERFACE:4})
same => n,Set(__OMLAGENTNAME=${MEMBERNAME})
same => n,Set(__OMLAGENTID=${CUT(MEMBERNAME,_,1)})

same => n,Set(__OMLCALLSTATUS=CONNECT)
same => n,Set(__OMLCALLWAITDURATION=$[${EPOCH} - ${OMLYEARZERO}])
same => n,Set(__OMLANSWERTIMESTAMP=${EPOCH})

same => n,Set(SHARED(OMLCALLSTATUS,${OMLDIALERDIALOUTCHAN})=CONNECT)
same => n,Set(SHARED(OMLCALLWAITDURATION,${OMLDIALERDIALOUTCHAN})=${OMLCALLWAITDURATION})
same => n,Set(SHARED(OMLANSWERTIMESTAMP,${OMLDIALERDIALOUTCHAN})=${OMLANSWERTIMESTAMP})
same => n,Set(SHARED(OMLAGENTID,${OMLDIALERDIALOUTCHAN})=${OMLAGENTID})
same => n,Set(SHARED(OMLFAILOVER,${OMLDIALERDIALOUTCHAN})=trueandconnect)

same => n,Set(SHARED(OMLCALLSTATUS,${OMLMOTHERCHAN})=CONNECT)
same => n,Set(SHARED(OMLCALLWAITDURATION,${OMLMOTHERCHAN})=${OMLCALLWAITDURATION})
same => n,Set(SHARED(OMLANSWERTIMESTAMP,${OMLMOTHERCHAN})=${OMLANSWERTIMESTAMP})
same => n,Set(SHARED(OMLAGENTID,${OMLMOTHERCHAN})=${OMLAGENTID})
same => n,Set(SHARED(OMLFAILOVER,${OMLMOTHERCHAN})=trueandconnect)

same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLAGENTID},CONNECT,${OMLOUTNUM},${OMLCODCLI},${OMLCALLTYPEID},${OMLCAMPTYPE},${OMLCALLWAITDURATION},,,call))l
same => n,AGI(omni-agent-status.py,SET,${OMLAGENTID},ONCALL,${EPOCH},${OMLCAMPQNAME},${OMLOUTNUM})
same => n,Return()


[sub-oml-outcall-connect]
; sub ejecutada cada vez que una llamada hacia afuera de OML es atendida
; Esta sub es invocada por canales tipo: channel-1 (SIP/provider/XXXXXXXX)
; ${OMLUNIQUEID}^${OMLAGENTID}^${OMLCAMPQNAME}^${OMLMOTHERCHAN}^${OMLYEARZERO}^${OMLMANUALCALLTYPEID}^${OMLAGENTSIP}

exten => s,1,Verbose(2, The outbound dialer, manual or preview call was attended !!! the new channel: SIP/trunk/OUTNUMXXXXX is ready for varsset and bridge actions)

;same => n,Gosub(sub-oml-set-chanvars,s,1(${OMLAGENTID},agent))
;same => n,Gosub(sub-oml-set-chanvars,s,1(${OMLCAMPID},camp))
;same => n,Gosub(sub-oml-set-chanvars,s,1(${OMLCODCLI},client))

same => n,Set(__OMLANSWERTIMESTAMP=${EPOCH})
same => n,Set(SHARED(OMLANSWERTIMESTAMP,${OMLMOTHERCHAN})=${OMLANSWERTIMESTAMP})
same => n,Set(__OMLCALLSTATUS=ANSWER)
same => n,Set(SHARED(OMLCALLSTATUS,${OMLMOTHERCHAN})=ANSWER)
same => n,Set(__OMLCALLWAITDURATION=$[${EPOCH} - ${OMLYEARZERO}])
same => n,Set(SHARED(OMLCALLWAITDURATION,${OMLMOTHERCHAN})=${OMLCALLWAITDURATION})
same => n,Goto(${OMLCALLTYPE})
same => n,Gosub(sub-oml-hangup,s,1(sub-oml-outcall-connect - FAIL))

same => n(dialerCall),Set(CHANNEL(hangup_handler_push)=rip-dialer-trunk-chan,s,1)
same => n,Goto(queueLog)

same => n(previewCall),Set(CHANNEL(hangup_handler_push)=rip-preview-trunk-chan,s,1)
same => n,AGI(omni-agent-status.py,SET,${OMLAGENTID},ONCALL,${EPOCH},${OMLCAMPQNAME},${OMLOUTNUM})
same => n,Gosub(sub-oml-amd,s,1(${OMLCAMPID}))
same => n,ExecIf($["${OMLCAMPREC}" == "True"]?GoSub(sub-oml-recorder,s,1(${OMLCAMPRECFILENAME},${OMLUNIQUEID})))
same => n,Goto(queueLog)

same => n(click2Call),Set(CHANNEL(hangup_handler_push)=rip-manualcall-trunk-chan,s,1)
same => n,AGI(omni-agent-status.py,SET,${OMLAGENTID},ONCALL,${EPOCH},${OMLCAMPQNAME},${OMLOUTNUM})
same => n,Gosub(sub-oml-amd,s,1(${OMLCAMPID}))
same => n,ExecIf($["${OMLCAMPREC}" == "True"]?GoSub(sub-oml-recorder,s,1(${OMLCAMPRECFILENAME},${OMLUNIQUEID})))
same => n,Goto(queueLog)

same => n(withoutCamp),Set(CHANNEL(hangup_handler_push)=rip-withoutcamp-trunk-chan,s,1)
same => n,AGI(omni-agent-status.py,SET,${OMLAGENTID},ONCALL,${EPOCH},WITHOUT,${OMLOUTNUM})
same => n,Gosub(sub-oml-amd,s,1(${OMLCAMPID}))
 ; temporal hasta ver que hacer con las llamadas fuera de base y el QL
same => n,Goto(nonQL)

same => n(queueLog),Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLAGENTID},${OMLCALLSTATUS},${OMLOUTNUM},${OMLCODCLI},${OMLCALLTYPEID},${OMLCAMPTYPE},${OMLCALLWAITDURATION},,,call))
same => n(nonQL),Verbose(2, "sub oml-outcall-connect terminating" )


[sub-oml-internalcall-connect]
; subrutina ejecutada por dos tipos de acciones: por un lado cuando se conecta una llamada desde un Dial hacia un agente
; por el otro cuando se conecta una llamada de un Queue hacia un agente

exten => s,1,Verbose(2, The internal agent or camp call was attended !!! the new channel: SIP/AGENTXXXX is ready for varsset and bridge actions)
same => n,Goto(${ARG1})


; queue call connect - queue call connect - queue call connect - queue call connect - queue call connect
same => n(internalQueueCallDst),Set(CHANNEL(hangup_handler_push)=sub-oml-post-call-channel-2,s,1(internalQueueCallDst))
same => n,Set(__OMLCAMPTYPE=${OMLCAMPTYPE)})
same => n,Set(__OMLCAMPQNAME=${OMLCAMPQNAME)})
same => n,Set(__OMLCALLTYPEID=7)
same => n,Set(__OMLAGENTSIP=${MEMBERINTERFACE:4})
same => n,Set(__OMLAGENTNAME=${MEMBERNAME})
same => n,Set(__OMLAGENTIDCALLED=${CUT(MEMBERNAME,_,1)})
same => n,Set(NOW=${EPOCH})
same => n,Set(WD=$[${NOW} - ${GLOBAL(${OMLOUTNUM}enterqueue)}])
same => n,Set(GLOBAL(${OMLOUTNUM})=A)
same => n,Set(GLOBAL(${OMLOUTNUM}ans)=${NOW})  ; se actualiza la variable ${GM}ans con el timestamp en que se atendiÃ³ "el dial"
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${UNIQUEID},${OMLAGENTIDCALLED},CONNECT,${OMLOUTNUM},${OMLCODCLI},9,${OMLCAMPTYPE},${WD},,,call))
same => n,AGI(omni-agent-status.py,SET,${OMLAGENTID},ONCALL-internal,${EPOCH})
same => n,AGI(omni-agent-status.py,SET,${OMLAGENTIDCALLED},ONCALL-internal,${EPOCH})
same => n,Set(__OMLQATTEND=1)
same => n,Return()


; preview SIP/XXXX chan connect - preview SIP/XXXX chan connect - preview SIP/XXXX chan connect - preview SIP/XXXX chan connect
same => n(previewCall),Set(CHANNEL(hangup_handler_push)=rip-preview-agent-chan,s,1)
same => n,AGI(omni-agent-status.py,GET,${OMLAGENTID})
same => n,ExecIf($["${CUT(OMLAGENTSTATUS,-,1)}" == "PAUSE"]?QueueLog(ALL,${UNIQUEID},${OMLAGENTID},UNPAUSEALL,${PAUSE_ID}))
same => n,ExecIf($["${CUT(OMLAGENTSTATUS,-,1)}" == "PAUSE"]?UnPauseQueueMember(,PJSIP/${OMLAGENTSIP}))
same => n,Set(SHARED(OMLCALLSTATUS,${OMLMOTHERCHAN})=CONNECT-AGENT)
same => n,Set(SHARED(OMLAGENTID,${OMLMOTHERCHAN})=${OMLAGENTID})
same => n,Return()


; click2call SIP/XXXX chan connect
same => n(click2Call),Set(CHANNEL(hangup_handler_push)=rip-manualcall-agent-chan,s,1)
same => n,AGI(omni-agent-status.py,GET,${OMLAGENTID})
same => n,ExecIf($["${CUT(OMLAGENTSTATUS,-,1)}" == "PAUSE"]?QueueLog(ALL,${UNIQUEID},${OMLAGENTID},UNPAUSEALL,${PAUSE_ID}))
same => n,ExecIf($["${CUT(OMLAGENTSTATUS,-,1)}" == "PAUSE"]?UnPauseQueueMember(,PJSIP/${OMLAGENTSIP}))
same => n,Set(SHARED(OMLCALLSTATUS,${OMLMOTHERCHAN})=CONNECT-AGENT)
same => n,Set(SHARED(OMLAGENTID,${OMLMOTHERCHAN})=${OMLAGENTID})
same => n,Set(SHARED(OMLAGENTNAME,${OMLMOTHERCHAN})=${OMLAGENTNAME})
same => n,Set(SHARED(OMLAGENTSIP,${OMLMOTHERCHAN})=${OMLAGENTSIP})
same => n,Return()

; click2call withoutCamp SIP/XXXX chan connect
same => n(withoutCamp),Set(CHANNEL(hangup_handler_push)=rip-withoutcamp-agent-chan,s,1)
same => n,Gosub(sub-oml-set-chanvars,s,1(${OMLAGENTID},agent))
same => n,ExecIf($["${CUT(OMLAGENTSTATUS,-,1)}" == "PAUSE"]?QueueLog(ALL,${UNIQUEID},${OMLAGENTID},UNPAUSEALL,${PAUSE_ID}))
same => n,ExecIf($["${CUT(OMLAGENTSTATUS,-,1)}" == "PAUSE"]?UnPauseQueueMember(,PJSIP/${OMLAGENTSIP}))
same => n,Set(SHARED(OMLCALLSTATUS,${OMLMOTHERCHAN})=CONNECT-AGENT)
same => n,Set(SHARED(OMLAGENTID,${OMLMOTHERCHAN})=${OMLAGENTID})
same => n,Return()

; internal call connect - internal call connect - internal call connect - internal call connect - internal call connect
same => n(withoutCampAgentCalled),Set(CHANNEL(hangup_handler_push)=rip-withoutcamp-agentdst-chan,s,1)
same => n,DumpChan
same => n,AGI(omni-agent-status.py,SET,${OMLAGENTIDCALLER},ONCALL,${EPOCH},INTERNAL,${OMLAGENTNAME})
same => n,AGI(omni-agent-status.py,SET,${OMLAGENT2CALLID},ONCALL,${EPOCH},INTERNAL,${OMLAGENTSIPCALLER})
same => n,Return()

; internal call connect - internal call connect - internal call connect - internal call connect - internal call connect
same => n(withoutCampPbx2AgentCall),Set(CHANNEL(hangup_handler_push)=rip-withoutCamp-agent-chan,s,1,s,1)
same => n,AGI(omni-agent-status.py,SET,${OMLAGENT2CALLID},ONCALL,${EPOCH},FROMPBX,${OMLOUTNUM})
same => n,Return

[sub-oml-blind-transfer-agent-connect]
; subrutina ejecutada cuando se atiende una llamada transferida un Agente, desde otro Agente (SIP/agente-que-recibe-transfer)
; ARG1 -> UNIQUEID | ARG2 -> OMLAGENTID | ARG3 -> OMLCAMPQNAME | ARG4 -> OMLAGENTNAME | ARG5 -> OMLYEARZEROTRANSFER | ARG6 -> OMLCALLTYPEID | ARG7 -> OMLAGENTSIP o OMLOUTNUM
; ARG8 -> OMLTRANSFERID | ARG9 -> OMLCALLTYPEID

exten => s,1,Verbose(2, The agent blind transfer was attended !!! the new channel: SIP/AGENTB-XXXX is ready for varsset and bridge actions)

same => n,AGI(omni-agent-status.py,SET,${OMLAGENTTRANSFERDSTID},ONCALL,${EPOCH},${OMLCAMPQNAME},${OMLOUTNUM})

same => n,Set(__OMLCALLSTATUS=BT-ANSWER)
same => n,Set(__OMLCALLWAITDURATION=$[${EPOCH} - ${ARG5}])
same => n,Set(__OMLTRANSFERANSWERTIMESTAMP=${EPOCH})

same => n,Set(SHARED(OMLCALLSTATUS,${ARG4})=BT-ANSWER)
same => n,Set(SHARED(OMLCALLWAITDURATION,${ARG4})=${OMLCALLWAITDURATION})
same => n,Set(SHARED(OMLTRANSFERANSWERTIMESTAMP,${ARG4})=${OMLTRANSFERANSWERTIMESTAMP})
same => n,Set(SHARED(OMLAGENTID,${ARG4})=${OMLAGENTID})

same => n,Set(CHANNEL(hangup_handler_push)=rip-bt-transfer-dst-ag-chan,s,1)
same => n(queueLog),Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${ARG1},${OMLAGENTTRANSFERDSTID},${OMLCALLSTATUS},${OMLOUTNUM},${OMLCODCLI},${ARG8},${ARG9},${OMLCALLWAITDURATION},,,call))
same => n,Return()


[sub-oml-consult-transfer-agent-connect]
; subrutina ejecutada cuando se atiende una llamada transferida un Agente, desde otro Agente
; sub-oml-consult-transfer-agent-connect^${OMLUNIQUEID}^${OMLAGENTID}^${OMLCAMPQNAME}^${OMLMOTHERCHAN}^${OMLYEARZEROTRANSFER}^${TRANSFERID}^${OMLCAMPTYPE}
; ARG1 -> UNIQUEID | ARG2 -> OMLAGENTID | ARG3 -> OMLCAMPQNAME | ARG4 -> OMLMOTHERCHAN | ARG5 -> OMLYEARZEROTRANSFER | ARG6 -> OMLCALLTYPEID | ARG7 -> OMLCAMPTYPE


exten => s,1,Verbose(2, The agent consult transfer was attended !!! the new channel: SIP/AGENTB-XXXX is ready for varsset and bridge actions)
same => n,Verbose(2, OMLUNIQUEID:${ARG1} OMLAGENTID:${ARG2} OMLCAMPQNAME:${ARG3} OMLMOTHERCHAN:${ARG4})
same => n,Verbose(2, OMLYEARZEROTRANSFER:${ARG5} TRANSFERID:${ARG6} OMLCAMPTYPEID:${ARG7})

same => n,AGI(omni-agent-status.py,SET,${OMLAGENTTRANSFERDSTID},ONCALL,${EPOCH},${OMLCAMPQNAME},${OMLOUTNUM})

same => n,Set(__OMLCALLSTATUS=CT-ANSWER)
same => n,Set(__OMLCALLWAITDURATION=$[${EPOCH} - ${ARG5}])
same => n,Set(__OMLTRANSFERANSWERTIMESTAMP=${EPOCH})

same => n,Set(SHARED(OMLCALLSTATUS,${OMLMOTHERCHAN})=CT-ANSWER)
same => n,Set(SHARED(OMLCALLTRANSFERWAITDURATION,${OMLMOTHERCHAN})=${OMLCALLWAITDURATION})
same => n,Set(SHARED(OMLTRANSFERANSWERTIMESTAMP,${OMLMOTHERCHAN})=${OMLTRANSFERANSWERTIMESTAMP})
same => n,Set(SHARED(OMLAGENTID,${OMLMOTHERCHAN})=${OMLAGENTID})
same => n,Set(SHARED(OMLAGENTTRANSFERID,${OMLMOTHERCHAN})=${OMLAGENTTRANSFERDSTID})

same => n,Set(CHANNEL(hangup_handler_push)=rip-ctransfer-ag2-channel,s,1(${OMLAGENTTRANSFERDSTID}))
same => n(queueLog),Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${ARG1},${OMLAGENTTRANSFERDSTID},${OMLCALLSTATUS},${OMLOUTNUM},${OMLCODCLI},${ARG6},${ARG7},${OMLCALLWAITDURATION},,,call))
same => n,Verbose(2, "sub oml-consult-transfer-agent-connect terminating" )


[sub-oml-blind-transfer-outcall-connect]
;${OMLUNIQUEID}^${OMLAGENTID}^${OMLCAMPQNAME}^${OMLMOTHERCHAN}^${OMLYEARZEROTRANSFER}^${OMLCAMPTYPE}^${OMLOUTNUMTRANSFER}^${OMLTRANSFERTYPE})

exten => s,1,Verbose(2, The OUTNUM blind transfer was attended !!! the new channel: ${CHANNEL]} is ready for varsset and bridge actions)

;same => n,
same => n,Set(__OMLCALLSTATUS=BTOUT-ANSWER)
same => n,Set(__OMLCALLWAITDURATION=$[${EPOCH} - ${ARG5}])
same => n,Set(__OMLTRANSFERANSWERTIMESTAMP=${EPOCH})

same => n,Set(SHARED(OMLCALLSTATUS,${ARG4})=${OMLCALLSTATUS})
same => n,Set(SHARED(OMLCALLWAITDURATION,${ARG4})=${OMLCALLWAITDURATION})
same => n,Set(SHARED(OMLTRANSFERANSWERTIMESTAMP,${ARG4})=${OMLTRANSFERANSWERTIMESTAMP})
same => n,Set(SHARED(OMLAGENTID,${ARG4})=${OMLAGENTID})

same => n,Set(CHANNEL(hangup_handler_push)=rip-btout-transfer-trunk-chan,s,1)
same => n(queueLog),Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${ARG1},${ARG7},${OMLCALLSTATUS},${OMLOUTNUM},${OMLCODCLI},9,${ARG6},${OMLCALLWAITDURATION},,,call))
same => n,Verbose(2, "sub oml-blind-transfer-outcall-connect terminating" )


[sub-oml-consult-transfer-outcall-connect]
;${OMLUNIQUEID}^${OMLAGENTID}^${OMLCAMPQNAME}^${OMLMOTHERCHAN}^${OMLYEARZEROTRANSFER}^${OMLCAMPTYPE}^${OMLOUTNUMTRANSFER}

exten => s,1,Verbose(2, The OUTNUUM consult transfer was attended !!! the new channel: ${CHANNEL]} is ready for varsset and bridge actions)

same => n,Set(__OMLCALLSTATUS=CTOUT-ANSWER)
same => n,Set(__OMLCALLWAITDURATION=$[${EPOCH} - ${ARG5}])
same => n,Set(__OMLTRANSFERANSWERTIMESTAMP=${EPOCH})

same => n,Set(SHARED(OMLCALLSTATUS,${ARG4})=${OMLCALLSTATUS})
same => n,Set(SHARED(OMLCALLTRANSFERWAITDURATION,${ARG4})=${OMLCALLWAITDURATION})
same => n,Set(SHARED(OMLTRANSFERANSWERTIMESTAMP,${ARG4})=${OMLTRANSFERANSWERTIMESTAMP})
same => n,Set(SHARED(OMLAGENTID,${ARG4})=${OMLAGENTID})
same => n,Set(SHARED(OMLOUTNUMTRANSFER,${ARG4})=${ARG7})

same => n,Set(CHANNEL(hangup_handler_push)=sub-oml-post-call-channel-2,s,1(ag2agConsultTransferDst))
same => n(queueLog),Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${ARG1},${ARG7},${OMLCALLSTATUS},${OMLOUTNUM},${OMLCODCLI},9,${ARG6},${OMLCALLWAITDURATION},,,call))
same => n,Verbose(2, "Macro oml-consult-transfer-outcall-connect terminating" )


[sub-oml-camp-transfer-connect]
; subrutina ejecutada cuando se atiende una llamada transferida una canpaÃ±a, desde un Agente
; Es invocada por los canales SIP/XXXX (de agentes), cuando Ã©stos atienden una llamada transferida

include => sub-oml-camp-transfer-connect-custom

exten => s,1,Verbose(2, The cmp transfer was attended !!! the new channel: SIP/AGENTB-XXXX is ready for varsset and bridge actions)
same => n,Set(CHANNEL(hangup_handler_push)=rip-in-agent-chan,s,1(ag2CampTransferDst))

same => n,Set(__OMLAGENTTRANSFERSIP=${MEMBERINTERFACE:4})
same => n,Set(__OMLAGENTNAME=${MEMBERNAME})
same => n,Set(__OMLAGENTTRANSFERID=${CUT(MEMBERNAME,_,1)})

same => n,Set(__OMLCALLSTATUS=CAMPT-ANSWER)
same => n,Set(__OMLTRANSFERANSWERTIMESTAMP=${EPOCH})

;OMLAGENTTRANSFERID
same => n,Set(SHARED(OMLCALLSTATUS,${OMLMOTHERCHAN})=${OMLCALLSTATUS})
same => n,Set(SHARED(OMLTRANSFERANSWERTIMESTAMP,${OMLMOTHERCHAN})=${OMLTRANSFERANSWERTIMESTAMP})
same => n,Set(SHARED(OMLAGENTID,${OMLMOTHERCHAN})=${OMLAGENTID})
same => n,Set(SHARED(OMLAGENTTRANSFERID,${OMLMOTHERCHAN})=${OMLAGENTTRANSFERID})

same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLAGENTID}-${OMLAGENTTRANSFERID},CAMPT-COMPLETE,${OMLOUTNUM},${OMLCODCLI},${OMLCALLTYPEID},${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},${OMLCAMPRECFILENAMEORIG},call))
same => n,Set(__OMLCALLWAITDURATION=$[${EPOCH} - ${OMLYEARZEROTRANSFER}])
same => n,Set(SHARED(OMLCALLTRANSFERWAITDURATION,${OMLMOTHERCHAN})=${OMLCALLWAITDURATION})
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPTRANSFERID},${OMLUNIQUEID},${OMLAGENTTRANSFERID},CONNECT,${OMLOUTNUM},${OMLCODCLI},${OMLCALLTYPEID},3,${OMLCALLWAITDURATION},,,call))
same => n,AGI(omni-agent-status.py,SET,${OMLAGENTTRANSFERID},ONCALL,${EPOCH},${QUEUENAME},${OMLOUTNUM})
same => n,Return()
