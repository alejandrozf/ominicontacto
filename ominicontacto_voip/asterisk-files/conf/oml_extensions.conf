; Copyright (C) 2018 Freetech Solutions

; This file is part of OMniLeads

; This program is free software: you can redistribute it and/or modify
; it under the terms of the GNU General Public License as published by
; the Free Software Foundation, either version 3 of the License, or
; (at your option) any later version.

; This program is distributed in the hope that it will be useful,
; but WITHOUT ANY WARRANTY; without even the implied warranty of
; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
; GNU General Public License for more details.

; You should have received a copy of the GNU General Public License
; along with this program.  If not, see http://www.gnu.org/licenses/.

;
; OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML     WARNING WARNING WARNING     OML OML OML OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML     WARNING WARNING WARNING     OML OML OML OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML     WARNING WARNING WARNING     OML OML OML OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML

;-----------------------------------------------------------------------------------------------------------;
; Do NOT edit this file as it is auto-generated by OMniLeads. All modifications to this file must be done 	;
; via the web gui. There are alternative files to make custom modifications, details at: 					;
; http://omnileads.net/configuration_files       															;
;-----------------------------------------------------------------------------------------------------------;

; Variables OML:
; OMLCAMPID = id de la campa単a
; OMLCAMPQNAME = queue name de la cola de la campa単a
; OMLCALLTYPE = phoneJS | dialerCall | preview | click2call | withoutCamp
; OMLCALLTYPEID = 1 MANUALCALL | 2 DIALER | 3 INBOUND | 4 PREV | 5 ICS |  7 WITHOUTCAMP | 8 BLIND TRANSFER | 9 CONSULT TRANSFER
; OMLAGENTSIP = numero SIP del agente
; OMLAGENTID = OML-Ap ID-pk agente
; OMLAGENTNAME = callerid name del agente
; OMLCODCLI = id del contacto asociado a la llamada
; OMLMANUALCALLTYPEID = 1 | 2 | 3 | 4 (es el tipo de c2c, agendas, contactos, )
; OMLOUTNUM = el numero EXTERNO (que debe ser enrutado) discado
; BLACKLIST creada por sub-oml-blacklist. 1 true, 0 false.
; OMLCAMPRECFILENAME = nombre del archivo que contiene la grabacion de la llamada




; OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML         LLAMADAS INTERNAS           OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML

[oml-dial-internal]
; llamadas hacia un agente, phoneJS disca AGENT o CAMP pero a単ade como HEADER el id de agente o campa単a que hay que llamar

include => oml-dial-internal-custom

exten => AGENT,1,Verbose(2, call to agent ${agent2Call})
same => n,Gosub(sub-oml-dial-without-campaign,s,1(${agent2Call},agentCall,${CUT(FTSAGENTE,_,1)}))

exten => CAMP,1,Verbose(2, call to campaign ${PJSIP_HEADER(read,campCall)})
same => n,Gosub(sub-oml-dial-without-campaign,s,1(${PJSIP_HEADER(read,campCall)},campCall))

; Blind Transfer Ag2Ag
exten => _0000X,1,Verbose(2, ag2agBlindTransfer ${EXTEN:4})
same => n,Gosub(sub-oml-ag2ag-blind-transfer,s,1(${EXTEN:4}))
exten => _0000XX,1,Verbose(2, ag2agBlindTransfer ${EXTEN:4})
same => n,Gosub(sub-oml-ag2ag-blind-transfer,s,1(${EXTEN:4}))
exten => _0000XXX,1,Verbose(2, agBlindTransfer ${EXTEN:4})
same => n,Gosub(sub-oml-ag2ag-blind-transfer,s,1(${EXTEN:4}))
exten => _0000XXXX,1,Verbose(2, agBlindTransfer ${EXTEN:4})
same => n,Gosub(sub-oml-ag2ag-blind-transfer,s,1(${EXTEN:4}))

; Consult Transfer Ag2Ag
exten => _1111X,1,Verbose(2, ag2agConsultTransfer ${EXTEN:4})
same => n,Gosub(sub-oml-ag2ag-consult-transfer,s,1(${EXTEN:4}))
exten => _1111XX,1,Verbose(2, ag2agConsultTransfer ${EXTEN:4})
same => n,Gosub(sub-oml-ag2ag-consult-transfer,s,1(${EXTEN:4}))
exten => _1111XXX,1,Verbose(2, ag2agConsultTransfer ${EXTEN:4})
same => n,Gosub(sub-oml-ag2ag-consult-transfer,s,1(${EXTEN:4}))
exten => _1111XXXX,1,Verbose(2, ag2agConsultTransfer ${EXTEN:4})
same => n,Gosub(sub-oml-ag2ag-consult-transfer,s,1(${EXTEN:4}))

; Blind Transfer Ag2Camp
exten => _9999X,1,Verbose(2, ag2CampTransfer ${EXTEN:4})
same => n,Gosub(sub-oml-ag2camp-transfer,s,1(${EXTEN:4}))
exten => _9999XX,1,Verbose(2, ag2CampTransfer ${EXTEN:4})
same => n,Gosub(sub-oml-ag2camp-transfer,s,1(${EXTEN:4}))
exten => _9999XXX,1,Verbose(2, ag2CampTransfer ${EXTEN:4})
same => n,Gosub(sub-oml-ag2camp-transfer,s,1(${EXTEN:4}))
exten => _9999XXXX,1,Verbose(2, ag2CampTransfer ${EXTEN:4})
same => n,Gosub(sub-oml-ag2camp-transfer,s,1(${EXTEN:4}))

[oml-dial-pbx2oml]

include => oml-dial-agents-custom

exten => _1XXX.,1,Verbose(2, call to agent ${EXTEN:4})
same => n,Set(__OMLFROMPBXCID=${CALLERID(name)})
same => n,Gosub(sub-oml-dial-without-campaign,s,1(${EXTEN:4},pbx2AgCall,${CALLERID(name)}))

; OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML         LLAMADAS SALIENTES          OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML

[oml-dial-out]
include => oml-dial-out-custom

exten => _X.,1,Verbose(2, Welcome to OMniLeads Contact Center dialout channel)

same => n,Set(EXTEN=${FILTER(0-9,${EXTEN})})
same => n,Gosub(sub-oml-out-check-set,s,1(${EXTEN}))

same => n,Verbose(2, sub return 1: idCamp=${OMLCAMPID}, queue=${OMLCAMPQNAME}, callType=${OMLCALLTYPE}, campType=${OMLCALLTYPEID})
same => n,Verbose(2, sub return 2: agentSIP=${OMLAGENTSIP}, agentName=${OMLAGENTNAME}, idClient=${OMLCODCLI})

same => n(goCampContext),Gosub(sub-oml-campaign-${OMLCALLTYPEID},s,1)
same => n,Gosub(sub-oml-hangup,s,1)


; OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML         LLAMADAS ENTRANTES      OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML

[oml-dial-in]
include => oml-dial-in-custom

exten => _X.,1,Verbose(2, welcome OML inbound call channels)

same => n,Gosub(sub-oml-set-chanvars,s,1(${EXTEN},INR))

same => n,Set(__OMLCALLTYPEID=3)
same => n,Set(__OMLCALLTYPE=Inbound)

same => n,GotoIf($["${OMLINRID}" != ""]?inrOk)
same => n,Playback(pbx-invalid)
same => n,Gosub(sub-oml-hangup,s,1(IN-R fail))

same => n(inrOk),Verbose(2, DID route OK)
same => n,Set(__OMLOUTNUM=${CALLERID(num)})
same => n,Set(CHANNEL(language)=${OMLINRLANG})

same => n(goDstSwitch),Gosub(sub-oml-dst-switch,s,1(${OMLINRDST}))
same => n,Gosub(sub-oml-hangup,s,1(IN-R fail))


; OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML         LLAMADAS CLICK2CALL & PREVIEW   OML OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML

[click2call]
; conexto invocado por los Originate click2call por DJANGO

include => click2call-custom

exten => _XXXX,1,Verbose(2, Click2Call PJSIP/1XXX Agent side)

same => n,GotoIf($["${origin}" == "withoutCamp"]?withoutCamp)

same => n,ExecIf($["${origin}" == "preview"]?Set(__OMLC2CHEADER=CLICK2CALLPREVIEW):Set(__OMLC2CHEADER=CLICK2CALL))
same => n,ExecIf($["${origin}" == "preview"]?Set(CHANNEL(hangup_handler_push)=rip-preview-originate-agent-chan,s,1):Set(CHANNEL(hangup_handler_push)=rip-manualcall-originate-agent-chan,s,1))
same => n,ExecIf($["${origin}" == "preview"]?Set(__OMLC2CCONNECT=previewCall):Set(__OMLC2CCONNECT=click2Call))
same => n,ExecIf($["${origin}" == "preview"]?Set(__OMLCALLTYPEID=4):Set(__OMLCALLTYPEID=1))
same => n,ExecIf($["${origin}" == "preview"]?Set(__OMLCALLTYPE=previewCall):Set(__OMLCALLTYPE=click2Call))

same => n(withoutCamp),ExecIf($["${origin}" == "withoutCamp"]?Set(__OMLC2CHEADER=withoutCamp))
same => n,ExecIf($["${origin}" == "withoutCamp"]?Set(CHANNEL(hangup_handler_push)=rip-withoutcamp-originate-agent-chan,s,1))
same => n,ExecIf($["${origin}" == "withoutCamp"]?Set(__OMLC2CCONNECT=withoutCamp))
same => n,ExecIf($["${origin}" == "withoutCamp"]?Set(__OMLCALLTYPEID=7))
same => n,ExecIf($["${origin}" == "withoutCamp"]?Set(__OMLCALLTYPE=withoutCamp))

same => n,Set(__OMLOUTNUM=${CALLERID(num)})
same => n,Set(__OMLAGENTID=${CUT(FTSAGENTE,_,1)})
same => n,Set(__OMLCAMPID=${IdCamp})
same => n,Set(__OMLCODCLI=${codCli})

same => n,Set(__OMLUNIQUEID=${UNIQUEID})
same => n,Set(__OMLYEARZERO=${EPOCH})
same => n,Set(__OMLCALLSTATUS=DIAL-AGENT)
same => n,Set(__OMLMOTHERCHAN=${CHANNEL})

same => n,Gosub(sub-oml-set-chanvars,s,1(${OMLCAMPID},CAMP))
same => n,Dial(PJSIP/${EXTEN},15,tTcb(sub-oml-pre-agent-chan,s,1)U(sub-oml-internalcall-connect^${OMLC2CCONNECT}))
same => n,Gosub(sub-oml-hangup,s,1(FAIL FAIL FAIL - ${CONTEXT}))

;  OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML  OML OML OML OML OML OMLOML OML OML OML OML OML
;  OML OML OML OML OML OML OML OML OML OML     SUPERVISION DALPLAN      OML OML OML OML OML OMLOML OML OML OML OML OML
;  OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML  OML OML OML OML OML OMLOML OML OML OML OML OML

[oml-sup-actions]
exten => CHANSPY,1,Verbose(2, Channel Spy)
same => n,Gosub(sub-oml-set-chanvars,s,1(${OMLAGENTID},agent))
same => n,ChanSpy(PJSIP/${OMLAGENTSIP},sb)
same => n,Hangup()

exten => CHANSPYWISHPER,1,Verbose(2, Channel Spy and Wishper)
same => n,Gosub(sub-oml-set-chanvars,s,1(${OMLAGENTID},agent))
same => n,ChanSpy(PJSIP/${OMLAGENTSIP},swb)
same => n,Hangup()

exten => CHANCONFER,1,Verbose(2, Channel Spy and Wishper)
same => n,Gosub(sub-oml-set-chanvars,s,1(${OMLAGENTID},agent))
same => n,ChanSpy(PJSIP/${OMLAGENTSIP},swbB)
same => n,Hangup()

exten => CHANTAKECALL,1,Verbose(2, Channel Spy and Wishper)
same => n,Gosub(sub-oml-set-chanvars,s,1(${OMLAGENTID},agent))
same => n,Transfer(PJSIP/${CALLERID(num)})
same => n,Hangup()

exten => AGENTPAUSE,1,Verbose(2,Pausing member in all queues)
same => n,Gosub(sub-oml-set-chanvars,s,1(${OMLAGENTID},agent))
same => n,Gosub(sub-oml-agent-pause,s,1(${OMLAGENTID},${OMLAGENTSIP},00))
same => n,Hangup()

exten => AGENTUNPAUSE,1,Verbose(2,UnPausing member in all queues)
same => n,Gosub(sub-oml-set-chanvars,s,1(${OMLAGENTID},agent))
same => n,Gosub(sub-oml-agent-unpause,s,1(${OMLAGENTID},${OMLAGENTSIP}))
same => n,Hangup()

exten => AGENTLOGOUT,1,Verbose(2, Logout agent)
same => n,Gosub(sub-oml-set-chanvars,s,1(${OMLAGENTID},agent))
same => n,Gosub(sub-oml-agent-logout,s,1(${OMLAGENTID},${OMLAGENTSIP},${OMLAGENTSTATUS}))
same => n,Hangup()
