# Copyright (C) 2018 Freetech Solutions

# This file is part of OMniLeads

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see http://www.gnu.org/licenses/.
#
---

# Se borra el cache de javascript, esto solo se hace cuando es postinstall
- name: Erase the javascript cache files (if exists)
  file: path="{{ install_prefix }}static/CACHE/{{ item }}" state=absent
  with_items:
    - js
    - manifest.json
  tags: ['never','postinstall']

# Este script sirve para hacer comandos de manage.py sin necesidad de activar virualenv primero
- name: Generate manage.sh and reinstal_addons script
  template: src=templates/bin/{{ item }} dest={{ install_prefix }}bin/ owner={{ usuario }} group={{ usuario }} mode=755
  with_items:
    - manage.sh
    - reinstall_addons.sh
  tags: postinstall

# Se ejecuta el script reinstal_addons.sh el cual detecta si un addon est√° instalado en el OML para asi volver a ejecutar los scripts de instalacion de dichos addons y queden funcionales.
- name: Execute reinstall_addons.sh script
  command: "{{ install_prefix }}bin/reinstall_addons.sh"
  tags: postinstall

# Se ejecuta primero las migraciones
- name: Run migrations of database
  command: "{{ install_prefix }}bin/manage.sh migrate --noinput"
  become: true
  become_method: su
  become_user: "{{ usuario }}"
  tags: postinstall

# Se crea el usuario admin
- name: Create admin superuser
  shell: "{{ install_prefix }}bin/manage.sh createsuperuser --noinput --username={{ admin_user }} --email=admin@example.com"
  register: result
  #failed_when: false
  failed_when:
      - "'is already taken' not in result.stderr"
      - "'is already taken' not in result.stdout"
      - "result.rc != 0"
  become: true
  become_method: su
  become_user: "{{ usuario }}"

# Se ejecutan los comandos de django que necesita omnileads
- name: Execute django commands
  command: "{{ install_prefix }}bin/manage.sh {{ item }}"
  with_items:
    - adicionar_perfil_supervisor_admin
    - populate_history
    - cambiar_admin_password
    - compilemessages
    - collectstatic --noinput
    - collectstatic_js_reverse
    - compress --force
    - regenerar_asterisk
    - actualizar_permisos
  become: true
  become_method: su
  become_user: "{{ usuario }}"
  tags: postinstall

# Se sube el archivo de config de nginx
- name: Upload nginx.conf configuration
  template: src=templates/etc/nginx.conf.j2 dest=/etc/nginx/nginx.conf
  tags: postinstall

# Se sube el archivo de configuracion de omnileads para nginx
- name: Create of ominicontacto.conf
  template: src=templates/etc/ominicontacto.conf dest=/etc/nginx/conf.d/ominicontacto.conf owner={{ usuario }} group={{ usuario }}
  tags: postinstall

# Se pasan los certificados creados en kamailio a la carpeta nginx_certs
- name: Copy of the certificates in nginx
  copy: "src={{ kamailio_location }}/etc/certs/{{ item }} dest={{ install_prefix }}nginx_certs/ remote_src=yes"
  with_items:
    - cert.pem
    - key.pem

# Se copia el certificado del servidor de llaves, para poder registrar la instancia de OML
- name: Copy register server certificate in default location
  copy: src=/var/tmp/ansible/cert dest={{ install_prefix }} owner={{ usuario }} group={{ usuario }}
  tags: postinstall

# Se crea el archivo .ini de uwsgi. Para mas info revisar documentacion de uwsgi
- name: Create of oml_uwgsi.ini script
  template: src=templates/run/oml_uwsgi.ini dest={{ install_prefix }}run/oml_uwsgi.ini mode=755 owner={{ usuario }} group={{ usuario }}
  tags: postinstall

# Se ejecuta una funcion de sql que hizo ale, esto es para los reportes
- name: Add queuelog trigger to database
  shell: psql -c '\i {{ install_prefix }}ominicontacto/reportes_app/sql/plperl/replace_insert_queue_log_ominicontacto_queue_log.sql'
  environment:
    PGPASSWORD: "{{ postgres_password }}"
  become: true
  become_user: "{{ usuario }}"
  become_method: su
  tags: ['never','postinstall']

# Se sube el script de backup-restore
- name: Generate extra scripts
  template: src=templates/bin/{{ item.src }} dest={{ install_prefix }}bin/{{ item.dest }} owner={{ usuario }} group={{ usuario }} mode=755
  with_items:
    - { src: backup-restore.sh, dest: backup-restore.sh }
    - { src: conversor.sh, dest: conversor.sh }
  tags: postinstall

- name: Increase number of connections accepted by UNIX sockets
  command: sysctl -w net.core.somaxconn=2048
  tags: postinstall

- name: Write the number of max connections in /etc/sysctl.conf
  blockinfile:
    path: /etc/sysctl.conf
    insertafter: EOF
    state: present
    block: |
      net.core.somaxconn=2048
  tags: postinstall

# Seteo posesion de ominicontacto al usuario omnileads
- name: Change owner and group of /opt/omnileads
  file: "path={{ install_prefix }} owner={{ usuario }} group={{ usuario }} recurse=yes"
  tags: postinstall

# Se inicia y habilita el servicio
- name: Start the omnileads-daemon service
  systemd: name=omnileads state=restarted enabled=yes daemon_reload=yes
  tags: postinstall

# Se borra la supervision en php que viene desde 1.2.X para atras
- name: Erase files related to php supervision
  file: state=absent path={{ item }}
  with_items:
    - /etc/nginx/conf.d/supervision.conf
    - "{{ install_prefix }}Omnisup"
  tags: ['never','postinstall']

# Starteo y habilito nginx
- name: Reload of nginx
  service: name=nginx state=reloaded enabled=yes
  tags: ['postinstall','kamailio']

# Se cambia el ownership de este path para que no tire el error 500 cuando se quiere acceder a la parte de subir audios
- name: Change ownership of /var/lib/nginx/tmp/
  file: state=directory owner={{ usuario }} group={{ usuario }} path=/var/lib/nginx recurse=yes

# Se crea el script de desinstalacion de OML
- name: Creation of Omnileads uninstall script
  template: src=templates/bin/oml-uninstall.sh dest=/usr/sbin/oml-uninstall mode=755 owner=root group=root
  tags: postinstall
