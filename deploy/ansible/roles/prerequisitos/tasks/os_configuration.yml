# Copyright (C) 2018 Freetech Solutions

# This file is part of OMniLeads

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see http://www.gnu.org/licenses/.
#
---

# se crea el grupo de usuario omnileads
- name: Creation of {{ usuario }} group
  group: name={{ usuario }} state=present

# Se crea el usuario omnileads con home en /opt/omnileads y con llaves ssh generadas
- name: Creation of {{ usuario }} user
  user: name={{ usuario }} group={{ usuario }} create_home=yes shell=/bin/bash home=/opt/{{ usuario }} generate_ssh_key=yes ssh_key_bits=2048 state=present

# Se crea el archivo .pgpass para manejar las conexiones a postgresql desde consola
- name: Create of .pgpass file
  template: src=roles/prerequisitos/templates/.pgpass dest={{ item }}.pgpass mode=0600 owner={{ usuario }} group={{ usuario }}
  with_items:
    - "{{ install_prefix }}"
    - /root/
  tags: postinstall

# Se setea el archivo de template de environment variables, según lo que se haya ingresado en el inventory
- name: Set environment variables for this installation
  template: src=templates/omnileads_envars.sh dest=/etc/profile.d/ mode=644 owner=root group=root
  tags: postinstall
  when: is_docker == "false"

# Se escribe en archivo de hosts relacion IP fqdn
- name: Write the /etc/hosts of server
  blockinfile:
    path: /etc/hosts
    insertafter: EOF
    state: present
    block: |
      {{ omni_ip }} {{ omni_fqdn }}
  tags: postinstall

# Se añaden los binarios que no van a necesitar password al hacerlos con sudo
- name: Edit sudoers to execute binaries withouth password
  lineinfile: dest=/etc/sudoers line={{ item }}
  with_items:
    - "{{ usuario }} ALL=(ALL:ALL)  ALL"
    - "{{ usuario }} ALL=(ALL) NOPASSWD: /usr/bin/rsync, /usr/sbin/asterisk"
  when: is_docker == "false"

# Se setea el timezone
- name: Set timezone of server
  timezone: name={{ TZ }}

##################################
###        Centos tasks         ##
##################################

# Tareas configuracion de yum para que funcione bien con ansible
- name: Configure yum for ansible
  ini_file: path=/etc/yum.conf section=main option="{{ item.option }}" no_extra_spaces=yes value="{{ item.value }}" state=present
  with_items:
    - { option: "sslverify", value: "0" }
    - { option: "timeout", value: "600" }
    - { option: "minrate", value: "100" }

# Se descarga e instala el repositorio epel-release
- name: Install of epel-release repo (centos)
  yum: name={{ epel_repository }} state=present update_cache=yes
  when: docker_distribution.stdout != '"Sangoma Linux"'

# Se instalan paquetes basicos que se necesitan
- name: Install of dependencies
  yum: name={{ item }} state=present update_cache=yes
  with_items:
    - tftp-server
    - cairo
    - crontabs
    - cronie
    - cronie-anacron
    - which
    - vim
    - texinfo
    - kernel-headers
    - acl
    - bind-utils
    - hiredis
    - python-psycopg2
    - nginx
    - nginx-all-modules
    - rsync
    - sox
    - lame
    - unixODBC
    - unzip
    - libxslt
    - uriparser
    - wget
    - jemalloc
  retries: 3
  delay: 3
  register: result
  until: result is success

- name: Install of unixODBC-devel package
  yum: name=unixODBC-devel state=present
  when: ansible_distribution == "Amazon"
