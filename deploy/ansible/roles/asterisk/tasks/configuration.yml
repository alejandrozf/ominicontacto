# Copyright (C) 2018 Freetech Solutions

# This file is part of OMniLeads

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see http://www.gnu.org/licenses/.
#
---

# Linkeo el binario a /usr/sbin
- name: Create simbolic link of asterisk binarie
  file: state=link src={{ asterisk_location }}/sbin/asterisk dest=/usr/sbin/asterisk force=true
  when: is_docker == "false" and asterisk_host is not defined
  tags: postinstall

# Se linkean los .conf de asterisk (los que estan afuera de archivos-no-enlaces) a /opt/omnileads/asterisk/etc/asterisk
- name: Copy of asterisk dialplan files for OML
  copy: "src={{ repo_location }}/ominicontacto_voip/asterisk-files/conf/{{ item }} dest={{ ast_conf_location }}/{{ item }} force=true owner={{ usuario }} group={{ usuario }} mode=755"
  with_items:
    - oml_extensions_bridgecall.conf
    - oml_extensions_commonsub.conf
    - oml_extensions_modules.conf
    - oml_extensions_postcall.conf
    - oml_extensions_precall.conf
    - oml_extensions.conf
  tags: postinstall
  when: prodenv == 1

#Se generan los archivos de configuracion que vienen en sus templates
- name: Copy of asterisk config files
  template: "src={{ repo_location }}/deploy/ansible/roles/asterisk/templates/conf/{{ item }} dest={{ ast_conf_location }}/{{ item }} owner={{ usuario }} group={{ usuario }} mode=755"
  with_items:
      - amd.conf
      - asterisk.conf
      - chan_dahdi.conf
      - extconfig.conf
      - extensions.conf
      - features.conf
      - func_odbc.conf
      - http.conf
      - indications.conf
      - manager.conf
      - modules.conf
      - musiconhold.conf
      - oml_extensions_globals.conf
      - oml_func_odbc.conf
      - oml_appmap.conf
      - oml_res_odbc.conf
      - oml_amd.conf
      - oml_manager.conf
      - oml_dahdi.conf
      - oml_http.conf
      - oml_pjsip.conf
      - oml_pjsip_transports.conf
      - oml_pjsip_wizard.conf
      - oml_sip_general.conf
      - pjsip.conf
      - pjsip_wizard.conf
      - queues.conf
      - res_odbc.conf
      - rtp.conf
      - sip.conf
      - udptl.conf
  tags: postinstall

# Se genera el archivo de logger para AIO
- name: Copy of asterisk logger config file
  template: "src=roles/asterisk/templates/conf/logger.conf dest={{ ast_conf_location }}/logger.conf owner={{ usuario }} group={{ usuario }} mode=755"
  when: is_docker == "false"
  tags: postinstall

# Los archivos-no-enlaces se copian a la a /etc/asterisk
- name: Copy of custom/override files
  copy: "src={{ repo_location }}/deploy/ansible/roles/asterisk/templates/conf/archivos-no-enlaces/ dest={{ ast_conf_location }}/ owner={{ usuario }} group={{ usuario }} mode=755"
  when: ast_custom_exists.rc != 0
  tags: postinstall

# Genero los agis desde ansible
- name: Creation of the agis omni-blackist and omni-dialednum
  template: "src={{ repo_location }}/deploy/ansible/roles/asterisk/templates/agi-bin/{{ item.src }} dest={{ ast_agis_location }}/{{ item.dest }} mode=755 owner={{ usuario }} group={{ usuario }}"
  with_items:
      - { src: "utiles.py.j2", dest: "utiles.py" }
      - { src: "omni-blacklist.py.j2", dest: "omni-blacklist.py" }
      - { src: "omni-dialednum.py.j2", dest: "omni-dialednum.py" }
      - { src: "omni-agent-status.py.j2", dest: "omni-agent-status.py" }
      - { src: "omni-retrieve-conf.py.j2", dest: "omni-retrieve-conf.py" }
  become: yes
  become_method: sudo
  tags: postinstall

# Se borra el archivo de cron de la vieja ubicacion que tenia desde 1.2.X para atras
- name: Erase omnileads crontab.d task
  file: state=absent path=/etc/cron.d/cron-omnileads
  when: is_docker == "false" and MONITORFORMAT == "mp3"
  tags: postinstall

# Se genera el archivo de crontab para AIO.
- name: Create crontab file
  template: src=templates/cron-grabaciones dest={{ cron_location }} owner={{ usuario }} group={{ usuario }} mode=600 force=yes
  tags: postinstall
  when: is_docker == "false"

# Creo el archivo odbcinst.ini desde ansible
- name: Creation of odbcinst.ini and odbc.ini files
  template: "src={{ repo_location }}/deploy/ansible/roles/asterisk/templates/etc/{{ item }} dest={{ odbc_location }} owner=root group=root mode=644"
  with_items:
    - odbcinst.ini
    - odbc.ini
  tags: postinstall
  when: asterisk_host is not defined

# Creo los irectorios que tendran los audios subidos por la web
- name: Creation of the sounds and blacklist dirs
  file: state=directory path={{ item }} owner={{ usuario }} group={{ usuario }} mode=755
  with_items:
    - "{{ ast_sounds_location }}/oml"
    - "{{ ast_blacklist_location }}"
  when: is_docker == "false"
  tags: postinstall

# Untareo los sonidos de agentes, que vienen desde el repo
- name: Untar the sounds for agents
  unarchive: "src={{ repo_location }}/ominicontacto_voip/asterisk-files/sounds/oml.tar.gz dest={{ ast_sounds_location }}/oml/"
  tags: postinstall

# Permiso de usuario a la carpeta de asterisk
- name: Set up permissions of asterisk
  file: state=directory path={{ asterisk_location }} owner={{ usuario }} group={{ usuario }} recurse=yes
  when: is_docker == "false"
  tags: postinstall

# Borro el archivo de inicio de asterisk en el init.d
- name: Erase default asterisk init.d service
  file: state=absent path=/etc/init.d/asterisk
  when: is_docker == "false" and asterisk_host is not defined
  tags: postinstall

# Habilito e inicio asterisk
- name: Start and enable asterisk
  systemd: name=asterisk state=restarted enabled=yes daemon_reload=yes
  when: is_docker == "false" and asterisk_host is not defined
  tags: postinstall

#- name: Reload of external asterisk
#  command: "{{ asterisk_location}}/sbin/asterisk -rx 'module reload'"
#  when: is_docker == "false" and asterisk_host is defined
#  tags: postinstall

# AÃ±ado un archivo para el logrotate
- name: Configuration of logrotate
  template: src=templates/omnileads dest=/etc/logrotate.d/omnileads owner=root group=root mode=644
  when: is_docker == "false"
