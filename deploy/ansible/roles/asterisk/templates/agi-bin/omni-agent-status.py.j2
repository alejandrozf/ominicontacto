{% if is_docker == "true" or asterisk_host is defined %}
#! /usr/bin/python3
{% else %}
#!{{ install_prefix }}virtualenv/bin/python3
{% endif %}
# -*- coding: utf-8 -*-

# Copyright (C) 2018 Freetech Solutions

# This file is part of OMniLeads

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see http://www.gnu.org/licenses/.

# Este script se ejecuta como AGI insertar y obtener datos de agente en Redis

import os
import sys
from socket import setdefaulttimeout
import redis

from asterisk.agi import AGI
from utiles import write_time_stderr

ASTERISK_LOCATION = os.getenv('ASTERISK_LOCATION')
REDIS_AGENT_STATUS_LOG = '{0}/var/log/asterisk/agent-status-agi-errors.log'.format(ASTERISK_LOCATION)

if os.path.exists(REDIS_AGENT_STATUS_LOG):
    append_write = 'a'  # append if already exists
else:
    append_write = 'w'  # make a new file if not

sys.stderr = open(REDIS_AGENT_STATUS_LOG, append_write)

setdefaulttimeout(20)

agi = AGI()
redis_connection = redis.Redis(
    host=os.getenv('REDIS_HOSTNAME'),  # settings.REDIS_HOSTNAME
    port=6379,  # settings.CONSTANCE_REDIS_CONNECTION['port'],
    decode_responses=True)

command = sys.argv[1]
agent_id = sys.argv[2]
agent_key = 'OML:AGENT:' + agent_id

if command not in ['GET', 'SET']:
    write_time_stderr("Unknown command {0}".format(command))

elif command == 'GET':
    try:
        agent_data = redis_connection.hgetall(agent_key)
    except redis.exceptions.RedisError as e:
        write_time_stderr("Error executing redis command HGETALL: {0}".format(e))
    else:
        if agent_data:
            try:
                agi.set_variable('__OMLAGENTNAME', agent_data['NAME'])
                agi.set_variable('OMLAGENTSIP', agent_data['SIP'])
                agi.set_variable('OMLAGENTSTATUS', agent_data['STATUS'])
                agi.set_variable('PAUSE_ID', agent_data.get('PAUSE_ID', ''))
            except Exception as e:
                write_time_stderr("Unable to set variable in channel due to {0}".format(e))
                raise e
        else:
            write_time_stderr("Unable to get Agent DATA for {0}".format(agent_key))

elif command == 'SET':
    data = {
        'STATUS': sys.argv[3],
        'TIMESTAMP': sys.argv[4],
        'CAMPAIGN': sys.argv[5] if len(sys.argv) >= 6 else '',
        'CONTACT_NUMBER': sys.argv[6] if len(sys.argv) >= 6 else '',
    }
    try:
        agent_data = redis_connection.hset(agent_key, mapping=data)
    except redis.exceptions.RedisError as e:
        write_time_stderr("Error executing redis command SET: {0}".format(e))
