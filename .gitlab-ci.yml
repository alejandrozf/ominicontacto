# Copyright (C) 2018 Freetech Solutions

# This file is part of OMniLeads

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see http://www.gnu.org/licenses/.
#
# Official framework image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python
stages:
  - test
  - build
  - deploy

build-image:
  stage: build
  services:
    - name: docker:dind
      entrypoint: ["env", "-u", "DOCKER_HOST"]
      command: ["dockerd-entrypoint.sh"]
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
    # See https://github.com/docker-library/docker/pull/166
    DOCKER_TLS_CERTDIR: ""
  image: gitlab/dind
  script:
  script:
    - cd install/docker && bash build_image.sh
  only:
    - web

build-rpm:
  stage: build
  variables:
  image: freetechsolutions/fpm-ansible:centos7
  script:
    - cd install/onpremise/build/ && bash build_rpm.sh
  only:
    - /.*build-all.*$/
    - /.*build-aio.*$/
    - schedules
    - web

test:
  stage: test
  image: freetechsolutions/omlapp-builder:develop
  services:
    - name: freetechsolutions/omlpgsql:develop
      alias: plpython
    - redis
  before_script:
    - apk add npm nodejs git bash
    - npm install eslint --global
  variables:
    POSTGRES_DB: omnileads
    POSTGRES_USER: omnileads
    POSTGRES_PASSWORD: omnileadsrw
    DATABASE_URL: "postgresql://postgres:postgres@postgres:5432/$POSTGRES_DB"
    DJANGO_SETTINGS_MODULE: "ominicontacto.settings.gitlab"
  script:
    - python checks.py
    - bash -x check-js.sh
    - flake8
    - python manage.py test --failfast
    - python manage.py compilemessages
  only:
    - merge_requests
    - schedules
    - web

deploy-aio-host-node:
  stage: deploy
  environment: FTS-CENTOS7
  script:
    - bash ~/git_cleanup.sh
    - cd ~/ominicontacto/install/onpremise/deploy/vagrant/deploy/host_node/
    - vagrant halt centos
    - vagrant destroy centos -f
    - ./vagrantup.sh centos
    - python ~/ominicontacto/install/onpremise/deploy/ansible/edit_inventory.py --internal_ip=$STAGING_IP_CENTOS --host_node=yes
    - cd ~/ominicontacto/install/onpremise/deploy/ansible
    - echo "$FTSINFRA_PASS" | sudo -S IS_CICD=$IS_CICD ./deploy.sh -i
    - sleep 180
    - TESTS_INTEGRACION=True TESTS_INTEGRACION_HOSTNAME=$STAGING_IP_CENTOS ADMIN_USERNAME=admin ADMIN_PASSWORD=admin LOGIN_FAILURE_LIMIT=10 python ~/ominicontacto/ominicontacto_app/tests/test_integracion/test_all.py
    - ~/ominicontacto/install/onpremise/deploy/vagrant/deploy/releases/package.sh
    - cd ~/ominicontacto/install/onpremise/deploy/vagrant/deploy/host_node/
    - sleep 20 && vagrant halt centos
  tags:
    - deploy-aio
  only:
    - /.*test-de-integracion.*$/
    - /.*deploy.*$/
    - schedules
    - web

upgrade-aio:
  stage: deploy
  script:
    - export CI_COMMIT_REF_NAME=$CI_COMMIT_REF_NAME RELEASE_TO_UPGRADE=$RELEASE_TO_UPGRADE
    - bash ~/git_cleanup.sh
    - cd ~/oml-boxes
    - vagrant box add centos-release-$RELEASE_TO_UPGRADE.box --name centos-release-$RELEASE_TO_UPGRADE --force
    - cd ~/ominicontacto/install/onpremise/deploy/vagrant/deploy/releases
    - vagrant halt
    - vagrant destroy -f
    - ./vagrantup.sh centos
    - python ~/ominicontacto/install/onpremise/deploy/ansible/edit_inventory.py --internal_ip=$UPGRADE_IP_CENTOS --host_node=yes
    - cd ~/ominicontacto/install/onpremise/deploy/ansible
    - echo "$FTSINFRA_PASS" | sudo -S IS_CICD=$IS_CICD ./deploy.sh -u
    - cd ~/ominicontacto/install/onpremise/deploy/vagrant/deploy/releases
    - vagrant halt centos
  tags:
    - deploy-aio
  only:
    - web

deploy-docker-devenv:
  stage: deploy
  script:
    - bash ~/git_cleanup.sh
    - if [ -d  ~/omnileads/devenv ]; then cd ~/omnileads/devenv/omnileads-websockets/deploy && docker-compose down && cd ~/omnileads/devenv && docker-compose down || true; docker volume rm devenv_postgresql_data; fi
    - cd ~/ominicontacto/ansible/deploy
    - python edit_inventory.py --docker_deploy=yes --devenv=yes
    - echo "$FTSINFRA_PASS" | sudo -S IS_CICD=$IS_CICD ./deploy.sh --docker-deploy --iface=$CICD_SERVER_IFACE
    - cd ~/omnileads/devenv && if [ ! -d omnileads-websockets ]; then git clone https://gitlab.com/omnileads/omnileads-websockets.git; fi
    - cd ~/omnileads/devenv && docker-compose up -d
    - cd ~/omnileads/devenv/omnileads-websockets/deploy && docker-compose up -d
    - until curl -sk --head  --request GET https://localhost |grep "302" > /dev/null; do echo "Environment still being installed, sleeping 80 seconds"; sleep 80; done; echo "Environment is up"
    - docker exec -u omnileads -d oml-omniapp-devenv python3 manage.py cambiar_admin_password && sleep 10
    - TESTS_INTEGRACION=True TESTS_INTEGRACION_HOSTNAME=localhost ADMIN_USERNAME=admin ADMIN_PASSWORD=admin LOGIN_FAILURE_LIMIT=10 python ~/ominicontacto/ominicontacto_app/tests/test_integracion/test_all.py
  tags:
    - deploy-docker
  only:
    - merge_requests
    - /.*test-de-integracion.*$/
    - /.*deploy.*$/
    - schedules
    - web
