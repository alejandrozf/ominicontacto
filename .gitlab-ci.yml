stages:
  - test
  - build

test:
  stage: test
  image: freetechsolutions/python-flake8:250213.01
  services:
    - name: freetechsolutions/omlpgsql:develop
      alias: plpython
    - redis

  before_script:
    - mkdir -p /opt/omnileads/ominicontacto/
    - mkdir -p /opt/omnileads/static
    - mkdir -p /opt/omnileads/media_root
    - rm "${CI_PROJECT_DIR}"/omnileads_ui/.eslintrc.js

  variables:
    POSTGRES_DB: omnileads
    POSTGRES_USER: omnileads
    POSTGRES_PASSWORD: omnileadsrw
    DATABASE_URL: "postgresql://postgres:postgres@postgres:5432/$POSTGRES_DB"
    DJANGO_SETTINGS_MODULE: "ominicontacto.settings.gitlab"
  script:
    - bash check-js.sh
    - flake8
    - python manage.py test --failfast
    - python manage.py compilemessages
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop"'
    - if: '$RUN_TEST == "true"'

container-image:
  services:
    - docker:24.0.7-dind-alpine3.19
  image: docker:24.0.7-alpine3.19
  stage: build
  before_script:
    - apk add --no-cache docker-cli-buildx
  script:
    - >-
      docker buildx build
      --file=Dockerfile
      --tag=dev
      --target=dev
      .
    - >-
      docker buildx build
      --file=Dockerfile
      --tag=run
      --target=run
      .
    - |-
      if [ -z "${DOCKER_USERNAME}" ] || [ -z "${DOCKER_SECRET}" ] || [ -z "${DOCKER_USER}" ] || [ -z "${DOCKER_PASSWORD}" ]; then
        echo "Error: Una o más variables necesarias no están definidas."
        exit 1
      fi

      if [ -z "$(cat .omnileads_version)" ]; then
        echo "Error: El archivo .omnileads_version no existe o está vacío."
        exit 1
      fi

      if [[ "${CI_COMMIT_BRANCH}" == "master" || "${CI_COMMIT_BRANCH}" == pre-release-* ]]; then
        echo "${DOCKER_SECRET}" | docker login --username "${DOCKER_USERNAME}" --password-stdin
        IMAGE_VERSION="$(date +%Y%m%d)-${CI_COMMIT_SHORT_SHA}"
        docker tag run omnileads/omlapp:$IMAGE_VERSION
        docker push docker.io/omnileads/omlapp:$IMAGE_VERSION
      else
        echo "${DOCKER_PASSWORD}" | docker login --username "${DOCKER_USER}" --password-stdin
        IMAGE_VERSION="$(date +%Y%m%d)-${CI_COMMIT_SHORT_SHA}"
        docker tag run freetechsolutions/omlapp:$IMAGE_VERSION
        docker push docker.io/freetechsolutions/omlapp:$IMAGE_VERSION
      fi
  only:
    - web
