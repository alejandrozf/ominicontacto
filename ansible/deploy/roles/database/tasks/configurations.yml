# Copyright (C) 2018 Freetech Solutions

# This file is part of OMniLeads

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see http://www.gnu.org/licenses/.
#
---

# El initdb de postgres toca ejecutarlo solo para centos
- name: Setup of postgresql
  command: "{{ pg_setup_location }} initdb"
  register: commandresult
  failed_when:
    - "'is not empty' not in commandresult.stderr"
    - "'is not empty' not in commandresult.stdout"
    - "commandresult.rc != 0"
  tags: postinstall
  when: postgres_host is not defined

# Se modifica el pg_hba.conf para postgres externo no hace falta
- name: Modify of pg_hba.conf file
  template: src=roles/database/templates/pg_hba.conf.j2 dest={{ pg_lib_location }}/pg_hba.conf
  tags: postinstall
  when: postgres_host is not defined

#Se modifica la ip en la que escucha postgres para postgres externo no hace falta
- name: Modify postgresql listen address (centos)
  lineinfile: path={{ pg_lib_location }}/postgresql.conf regexp="^#listen_addresses" line="listen_addresses = '*'" state=present
  tags: postinstall
  when: postgres_host is not defined

# Restarteamos servicio
- name: Restart postgres service
  service: name={{ pg_service_name }} state=restarted enabled=yes
  when: postgres_host is not defined
  tags: postinstall

# Se crea el usuario de postgres para OML, para postgres interno
- name: Create/modify postgres user
  postgresql_user: name={{ postgres_user }} db=postgres login_host=127.0.0.1 password={{ postgres_password }} role_attr_flags=SUPERUSER encrypted=yes
  become: yes
  become_method: sudo
  become_user: postgres
  tags: postinstall
  when: postgres_host is not defined

# Se crea base de datos omnileads
- name: Create of the database
  postgresql_db: name={{ postgres_database }} state=present login_user={{ postgres_user }} login_password={{ postgres_password }} owner={{ postgres_user }} login_host=localhost
  when: postgres_host is not defined

# Se crea el lenguaje plperl, para postgres interno.
- name: Create language plperl in database
  shell: psql -U {{ postgres_user }} -d {{ item }} -h 127.0.0.1 -c 'CREATE EXTENSION plperl'
  environment:
    - PGPASSWORD: "{{ postgres_password }}"
  with_items:
    - "{{ postgres_database }}"
    - template1
  register: plperl_result
  tags: postinstall
  when: postgres_host is not defined
  failed_when:
    - "plperl_result.rc != 1"
    - "plperl_result.rc != 0"

# Se Borran los binarios de postgres en /usr/bin en caso de que queden los binarios de 9.6
- name: Erasing pg_dump and psql binaries from {{ postgresql_old_version }}
  file: name=/usr/bin/{{ item }} state=absent
  with_items:
    - psql
    - pg_restore
    - pg_dump
  tags: postinstall
  when: ansible_distribution != "Amazon" and postgres_host is not defined

# Se linkean los binarios de postgres 11
- name: Create link of pg{{ postgresql_version }} binaries in /usr/bin/
  file: state=link src=/usr/pgsql-{{ postgresql_version }}/bin/{{ item }} dest=/usr/bin/{{ item }} force=true owner=root group=root mode=755
  with_items:
    - psql
    - pg_restore
    - pg_dump
  tags: postinstall
  when: ansible_distribution != "Amazon" and postgres_host is not defined

##########################################################################################
# Las tareas a continuacion se ejecutan cuando tenemos postgresql en un servidor externo #
##########################################################################################

# Se crea el usuario de postgres
- name: Create/modify postgres user
  postgresql_user:
    name: "{{ postgres_user }}"
    db: "{{ default_postgres_database }}"
    password: "{{ postgres_password }}"
    login_user: "{{ default_postgres_user }}"
    login_host: "{{ postgres_host }}"
    login_password: "{{ default_postgres_password }}"
    role_attr_flags: CREATEROLE,CREATEDB,INHERIT,LOGIN
    encrypted: yes
    port: "{{ postgres_port }}"
  when: postgres_host is defined and default_postgres_user is defined and default_postgres_password is defined and default_postgres_password is defined

# Se crea base de datos omnileads
- name: Create of the database
  postgresql_db:
    name: "{{ postgres_database }}"
    state: present
    login_user: "{{ postgres_user }}"
    login_password: "{{ postgres_password }}"
    owner: "{{ postgres_user }}"
    login_host: "{{ postgres_host }}"
    port: "{{ postgres_port }}"
    maintenance_db: "{{ default_postgres_database }}"
  when: postgres_host is defined and default_postgres_user is defined and default_postgres_password is defined

# Se crea el lenguaje plperl, para postgres interno.
- name: Create language plperl in database
  shell: psql -U {{ postgres_user }} -d {{ postgres_database }} -h {{ postgres_host }} -c 'CREATE EXTENSION plperl' -p {{ postgres_port }}
  environment:
    PGPASSWORD: "{{ postgres_password }}"
  register: plperl_result
  tags: postinstall
  when: postgres_host is defined
  failed_when:
    - "plperl_result.rc != 1"
    - "plperl_result.rc != 0"
